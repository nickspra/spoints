{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/do-searchs/do-searchs.component.html","webpack:///./src/app/components/do-searchs/do-searchs.component.scss","webpack:///./src/app/components/do-searchs/do-searchs.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/keyword-scraper.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DoSearchsComponent } from './components/do-searchs/do-searchs.component';\n\nconst routes: Routes = [\n  { path: '', component: DoSearchsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'the-search-for-spoints';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DoSearchsComponent } from './components/do-searchs/do-searchs.component';\n\n// services\nimport { ApiService } from './services/api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DoSearchsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [ ApiService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<p>\\n  do-searchs works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZG8tc2VhcmNocy9kby1zZWFyY2hzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { KeywordScraperService } from '../../services/keyword-scraper.service';\n\n@Component({\n  selector: 'app-do-searchs',\n  templateUrl: './do-searchs.component.html',\n  styleUrls: ['./do-searchs.component.scss'],\n  providers: [ KeywordScraperService ]\n})\nexport class DoSearchsComponent implements OnInit {\n\n  constructor(private keywordService: KeywordScraperService) { }\n\n  ngOnInit() {\n    // this.keywordService.getPageToScrape().subscribe(res => {\n    //   console.log(res);\n    // });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) {\n    let headers = new HttpHeaders({\n      'Accept':'text/html'\n    });\n  }\n\n  get(url: string, params?: string) {\n    let enUrl = encodeURIComponent(url);\n    return this.http.get('http://www.whateverorigin.org/get?url=${enUrl}');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeywordScraperService {\n\n  constructor(private api: ApiService) { }\n\n  getPageToScrape() {\n    const url:string = 'https://www.mondovo.com/keywords/'; //https://en.wikipedia.org/wiki/Something'\n    return this.api.get(url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}