{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/do-searchs/do-searchs.component.html","webpack:///./src/app/components/do-searchs/do-searchs.component.scss","webpack:///./src/app/components/do-searchs/do-searchs.component.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/keyword-scraper.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DoSearchsComponent } from './components/do-searchs/do-searchs.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DoSearchsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { } \r\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'the-search-for-spoints';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DoSearchsComponent } from './components/do-searchs/do-searchs.component';\r\n\r\n// services\r\nimport { ApiService } from './services/api.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DoSearchsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [ ApiService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<button type=\\\"button\\\" (click)=\\\"doSearch()\\\">Do Search</button>\\r\\n\\r\\n<button type=\\\"button\\\" (click)=\\\"doMobileSearch()\\\" class=\\\"btn\\\" style=\\\"width: 100%;height: 100px; margin-top:70px;\\\">Do Mobile Search</button>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9kby1zZWFyY2hzL2RvLXNlYXJjaHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { KeywordScraperService } from '../../services/keyword-scraper.service';\r\nimport keywords from '../../../assets/keywords.json';\r\n\r\n@Component({\r\n  selector: 'app-do-searchs',\r\n  templateUrl: './do-searchs.component.html',\r\n  styleUrls: ['./do-searchs.component.scss'],\r\n  providers: [ KeywordScraperService ]\r\n})\r\nexport class DoSearchsComponent implements OnInit {\r\n  keywords:any;\r\n  requiredPoints: number = 320;\r\n  pointsPerSearch: number = 3;\r\n  totalRequiredSearches: number = this.requiredPoints / this.pointsPerSearch;\r\n  intervalTime: number = 100; // adjust this parameter to change window spawn rate\r\n\r\n  constructor(private keywordScraper: KeywordScraperService) { }\r\n\r\n  ngOnInit() {\r\n    this.keywords = keywords.keywords;\r\n    // this.keywordScraper.getRandomKeywords().subscribe( res => {\r\n    //   console.log(res)\r\n    //   this.keywords = res;\r\n    // });\r\n\r\n  }\r\n  doMobileSearch() {\r\n    this.intervalTime = 100;\r\n    this.requiredPoints = 200;\r\n    this.doSearch();\r\n  }\r\n  doSearch() {\r\n    let count = 0;\r\n  \tlet windows = [];\r\n  \tconst max = this.totalRequiredSearches; //keywords.length; can be adjusted to only search for the maximum number you need\r\n  \tconst intervalTime = this.intervalTime;\r\n  \tconst waitToKillTime = (max * intervalTime) + 1000;\r\n\r\n  \tlet myInterval = setInterval(() => {\r\n  \t\tif(count < max) {\r\n        const randomNumber = Math.floor((Math.random() * (this.keywords.length-1)) + 1);\r\n  \t\t\tlet newWindow = window.open(`https://www.bing.com/search?q=+${this.keywords[randomNumber]}`,'_blank');\r\n  \t\t\twindows.push(newWindow);\r\n  \t    } else {\r\n  \t    \tclearInterval(myInterval);\r\n  \t    }\r\n  \t\tcount++;\r\n\r\n  \t}, intervalTime);\r\n\r\n  \t//wait for all windows to be added before closing them\r\n  \tsetTimeout(() => {\r\n  \t\twindows.forEach(windowItem => {\r\n  \t\t\twindowItem.close();\r\n  \t\t});\r\n  \t}, waitToKillTime);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) {\r\n    let headers = new HttpHeaders({\r\n      'Accept':'text/html'\r\n    });\r\n  }\r\n\r\n  get(url: string, params?: string) {\r\n    // let enUrl = encodeURIComponent(url);\r\n    return this.http.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class KeywordScraperService {\r\n  baseUrl: string = 'https://www.randomlists.com';\r\n\r\n  constructor(private api: ApiService) { }\r\n\r\n  // getPageToScrape() {\r\n  //   const url:string = 'https://www.mondovo.com/keywords/'; //https://en.wikipedia.org/wiki/Something'\r\n  //   return this.api.get(url);\r\n  // }\r\n  getRandomKeywords () {\r\n      const url = `${this.baseUrl}/data/words.json`;\r\n      return this.api.get(url);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}